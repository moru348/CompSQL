package dev.moru3.compsql

import java.io.InputStream
import java.io.Reader
import java.math.BigDecimal
import java.net.URL
import java.sql.*
import java.sql.Array
import java.sql.Date
import java.sql.ResultSet
import java.util.*

class ResultSet(val rawResultSet: ResultSet): ResultSet {
    /**
     * もうやだ...
     */



    override fun <T : Any?> unwrap(iface: Class<T>?): T = rawResultSet.unwrap(iface)
    override fun isWrapperFor(iface: Class<*>?): Boolean = rawResultSet.isWrapperFor(iface)
    override fun close() = rawResultSet.close()
    override fun next(): Boolean = rawResultSet.next()
    override fun wasNull(): Boolean = rawResultSet.wasNull()
    override fun getString(columnIndex: Int): String = rawResultSet.getString(columnIndex)
    override fun getString(columnLabel: String?): String = rawResultSet.getString(columnLabel)
    override fun getBoolean(columnIndex: Int): Boolean = rawResultSet.getBoolean(columnIndex)
    override fun getBoolean(columnLabel: String?): Boolean = rawResultSet.getBoolean(columnLabel)
    override fun getByte(columnIndex: Int): Byte = rawResultSet.getByte(columnIndex)
    override fun getByte(columnLabel: String?): Byte = rawResultSet.getByte(columnLabel)
    override fun getShort(columnIndex: Int): Short = rawResultSet.getShort(columnIndex)
    override fun getShort(columnLabel: String?): Short = rawResultSet.getShort(columnLabel)
    override fun getInt(columnIndex: Int): Int = rawResultSet.getInt(columnIndex)
    override fun getInt(columnLabel: String?): Int = rawResultSet.getInt(columnLabel)
    override fun getLong(columnIndex: Int): Long = rawResultSet.getLong(columnIndex)
    override fun getLong(columnLabel: String?): Long = rawResultSet.getLong(columnLabel)
    override fun getFloat(columnIndex: Int): Float = rawResultSet.getFloat(columnIndex)
    override fun getFloat(columnLabel: String?): Float = rawResultSet.getFloat(columnLabel)
    override fun getDouble(columnIndex: Int): Double = rawResultSet.getDouble(columnIndex)
    override fun getDouble(columnLabel: String?): Double = rawResultSet.getDouble(columnLabel)
    override fun getBigDecimal(columnIndex: Int, scale: Int): BigDecimal = rawResultSet.getBigDecimal(columnIndex, scale)
    override fun getBigDecimal(columnLabel: String?, scale: Int): BigDecimal = rawResultSet.getBigDecimal(columnLabel, scale)
    override fun getBigDecimal(columnIndex: Int): BigDecimal = rawResultSet.getBigDecimal(columnIndex)
    override fun getBigDecimal(columnLabel: String?): BigDecimal = rawResultSet.getBigDecimal(columnLabel)
    override fun getBytes(columnIndex: Int): ByteArray = rawResultSet.getBytes(columnIndex)
    override fun getBytes(columnLabel: String?): ByteArray = rawResultSet.getBytes(columnLabel)
    override fun getDate(columnIndex: Int): Date = rawResultSet.getDate(columnIndex)
    override fun getDate(columnLabel: String?): Date = rawResultSet.getDate(columnLabel)
    override fun getDate(columnIndex: Int, cal: Calendar?): Date = rawResultSet.getDate(columnIndex, cal)
    override fun getDate(columnLabel: String?, cal: Calendar?): Date = rawResultSet.getDate(rawResultSet.concurrency, cal)
    override fun getTime(columnIndex: Int): Time = rawResultSet.getTime(columnIndex)
    override fun getTime(columnLabel: String?): Time = rawResultSet.getTime(columnLabel)
    override fun getTime(columnIndex: Int, cal: Calendar?): Time = rawResultSet.getTime(columnIndex, cal)
    override fun getTime(columnLabel: String?, cal: Calendar?): Time = rawResultSet.getTime(columnLabel, cal)
    override fun getTimestamp(columnIndex: Int): Timestamp = rawResultSet.getTimestamp(columnIndex)
    override fun getTimestamp(columnLabel: String?): Timestamp = rawResultSet.getTimestamp(columnLabel)
    override fun getTimestamp(columnIndex: Int, cal: Calendar?): Timestamp = rawResultSet.getTimestamp(columnIndex, cal)
    override fun getTimestamp(columnLabel: String?, cal: Calendar?): Timestamp = rawResultSet.getTimestamp(columnLabel, cal)
    override fun getAsciiStream(columnIndex: Int): InputStream = rawResultSet.getAsciiStream(columnIndex)
    override fun getAsciiStream(columnLabel: String?): InputStream = rawResultSet.getAsciiStream(columnLabel)
    override fun getUnicodeStream(columnIndex: Int): InputStream = rawResultSet.getUnicodeStream(columnIndex)
    override fun getUnicodeStream(columnLabel: String?): InputStream = rawResultSet.getUnicodeStream(columnLabel)
    override fun getBinaryStream(columnIndex: Int): InputStream = rawResultSet.getBinaryStream(columnIndex)
    override fun getBinaryStream(columnLabel: String?): InputStream = rawResultSet.getBinaryStream(columnLabel)
    override fun getWarnings(): SQLWarning = rawResultSet.warnings
    override fun clearWarnings() = rawResultSet.clearWarnings()
    override fun getCursorName(): String = rawResultSet.cursorName
    override fun getMetaData(): ResultSetMetaData = rawResultSet.metaData
    override fun getObject(columnIndex: Int): Any = rawResultSet.getObject(columnIndex)
    override fun getObject(columnLabel: String?): Any = rawResultSet.getObject(columnLabel)
    override fun getObject(columnIndex: Int, map: MutableMap<String, Class<*>>?): Any = rawResultSet.getObject(columnIndex, map)
    override fun getObject(columnLabel: String?, map: MutableMap<String, Class<*>>?): Any = rawResultSet.getObject(columnLabel, map)
    override fun <T : Any?> getObject(columnIndex: Int, type: Class<T>?): T = rawResultSet.getObject(columnIndex, type)
    override fun <T : Any?> getObject(columnLabel: String?, type: Class<T>?): T = rawResultSet.getObject(columnLabel, type)
    override fun findColumn(columnLabel: String?): Int = rawResultSet.findColumn(columnLabel)
    override fun getCharacterStream(columnIndex: Int): Reader = rawResultSet.getCharacterStream(columnIndex)
    override fun getCharacterStream(columnLabel: String?): Reader = rawResultSet.getCharacterStream(columnLabel)
    override fun isBeforeFirst(): Boolean = rawResultSet.isBeforeFirst
    override fun isAfterLast(): Boolean = rawResultSet.isAfterLast
    override fun isFirst(): Boolean = rawResultSet.isFirst
    override fun isLast(): Boolean = rawResultSet.isLast
    override fun beforeFirst() = rawResultSet.beforeFirst()
    override fun afterLast() = rawResultSet.afterLast()
    override fun first(): Boolean = rawResultSet.first()
    override fun last(): Boolean = rawResultSet.last()
    override fun getRow(): Int = rawResultSet.row
    override fun absolute(row: Int): Boolean = rawResultSet.absolute(row)
    override fun relative(rows: Int): Boolean = rawResultSet.relative(rows)
    override fun previous(): Boolean = rawResultSet.previous()
    override fun setFetchDirection(direction: Int) { rawResultSet.fetchDirection = direction }
    override fun getFetchDirection(): Int = rawResultSet.fetchDirection
    override fun setFetchSize(rows: Int) { rawResultSet.fetchSize = rows }
    override fun getFetchSize(): Int = rawResultSet.fetchSize
    override fun getType(): Int = rawResultSet.type
    override fun getConcurrency(): Int = rawResultSet.concurrency
    override fun rowUpdated(): Boolean = rawResultSet.rowUpdated()
    override fun rowInserted(): Boolean = rawResultSet.rowInserted()
    override fun rowDeleted(): Boolean = rawResultSet.rowDeleted()
    override fun updateNull(columnIndex: Int) = rawResultSet.updateNull(columnIndex)
    override fun updateNull(columnLabel: String?) = rawResultSet.updateNull(columnLabel)
    override fun updateBoolean(columnIndex: Int, x: Boolean) = rawResultSet.updateBoolean(columnIndex, x)
    override fun updateBoolean(columnLabel: String?, x: Boolean) = rawResultSet.updateBoolean(columnLabel, x)
    override fun updateByte(columnIndex: Int, x: Byte) = rawResultSet.updateByte(columnIndex, x)
    override fun updateByte(columnLabel: String?, x: Byte) = rawResultSet.updateByte(columnLabel, x)
    override fun updateShort(columnIndex: Int, x: Short) = rawResultSet.updateShort(columnIndex, x)
    override fun updateShort(columnLabel: String?, x: Short) = rawResultSet.updateShort(columnLabel, x)
    override fun updateInt(columnIndex: Int, x: Int) = rawResultSet.updateInt(columnIndex, x)
    override fun updateInt(columnLabel: String?, x: Int) = rawResultSet.updateInt(columnLabel, x)
    override fun updateLong(columnIndex: Int, x: Long) = rawResultSet.updateLong(columnIndex, x)
    override fun updateLong(columnLabel: String?, x: Long) = rawResultSet.updateLong(columnLabel, x)
    override fun updateFloat(columnIndex: Int, x: Float) = rawResultSet.updateFloat(columnIndex, x)
    override fun updateFloat(columnLabel: String?, x: Float) = rawResultSet.updateFloat(columnLabel, x)
    override fun updateDouble(columnIndex: Int, x: Double) = rawResultSet.updateDouble(columnIndex, x)
    override fun updateDouble(columnLabel: String?, x: Double) = rawResultSet.updateDouble(columnLabel, x)
    override fun updateBigDecimal(columnIndex: Int, x: BigDecimal?) = rawResultSet.updateBigDecimal(columnIndex, x)
    override fun updateBigDecimal(columnLabel: String?, x: BigDecimal?) = rawResultSet.updateBigDecimal(columnLabel, x)
    override fun updateString(columnIndex: Int, x: String?) = rawResultSet.updateString(columnIndex, x)
    override fun updateString(columnLabel: String?, x: String?) = rawResultSet.updateString(columnLabel, x)
    override fun updateBytes(columnIndex: Int, x: ByteArray?) = rawResultSet.updateBytes(columnIndex, x)
    override fun updateBytes(columnLabel: String?, x: ByteArray?) = rawResultSet.updateBytes(columnLabel, x)
    override fun updateDate(columnIndex: Int, x: Date?) = rawResultSet.updateDate(columnIndex, x)
    override fun updateDate(columnLabel: String?, x: Date?) = rawResultSet.updateDate(columnLabel, x)
    override fun updateTime(columnIndex: Int, x: Time?) = rawResultSet.updateTime(columnIndex, x)
    override fun updateTime(columnLabel: String?, x: Time?) = rawResultSet.updateTime(columnLabel, x)
    override fun updateTimestamp(columnIndex: Int, x: Timestamp?) = rawResultSet.updateTimestamp(columnIndex, x)
    override fun updateTimestamp(columnLabel: String?, x: Timestamp?) = rawResultSet.updateTimestamp(columnLabel, x)
    override fun updateAsciiStream(columnIndex: Int, x: InputStream?, length: Int) = rawResultSet.updateAsciiStream(columnIndex, x, length)
    override fun updateAsciiStream(columnLabel: String?, x: InputStream?, length: Int) = rawResultSet.updateAsciiStream(columnLabel, x, length)
    override fun updateAsciiStream(columnIndex: Int, x: InputStream?, length: Long) = rawResultSet.updateAsciiStream(columnIndex, x, length)
    override fun updateAsciiStream(columnLabel: String?, x: InputStream?, length: Long) = rawResultSet.updateAsciiStream(columnLabel, x, length)
    override fun updateAsciiStream(columnIndex: Int, x: InputStream?) = rawResultSet.updateAsciiStream(columnIndex, x)
    override fun updateAsciiStream(columnLabel: String?, x: InputStream?) = rawResultSet.updateAsciiStream(columnLabel, x)
    override fun updateBinaryStream(columnIndex: Int, x: InputStream?, length: Int) = rawResultSet.updateAsciiStream(columnIndex, x, length)
    override fun updateBinaryStream(columnLabel: String?, x: InputStream?, length: Int) = rawResultSet.updateBinaryStream(columnLabel, x, length)
    override fun updateBinaryStream(columnIndex: Int, x: InputStream?, length: Long) = rawResultSet.updateBinaryStream(columnIndex, x, length)
    override fun updateBinaryStream(columnLabel: String?, x: InputStream?, length: Long) = rawResultSet.updateBinaryStream(columnLabel, x, length)
    override fun updateBinaryStream(columnIndex: Int, x: InputStream?) = rawResultSet.updateBinaryStream(columnIndex, x)
    override fun updateBinaryStream(columnLabel: String?, x: InputStream?) = rawResultSet.updateBinaryStream(columnLabel, x)
    override fun updateCharacterStream(columnIndex: Int, x: Reader?, length: Int) = rawResultSet.updateCharacterStream(columnIndex, x, length)
    override fun updateCharacterStream(columnLabel: String?, reader: Reader?, length: Int) = rawResultSet.updateCharacterStream(columnLabel, reader, length)
    override fun updateCharacterStream(columnIndex: Int, x: Reader?, length: Long) = rawResultSet.updateCharacterStream(columnIndex, x, length)
    override fun updateCharacterStream(columnLabel: String?, reader: Reader?, length: Long) = rawResultSet.updateCharacterStream(columnLabel, reader, length)
    override fun updateCharacterStream(columnIndex: Int, x: Reader?) = rawResultSet.updateCharacterStream(columnIndex, x)
    override fun updateCharacterStream(columnLabel: String?, reader: Reader?) = rawResultSet.updateCharacterStream(columnLabel, reader)
    override fun updateObject(columnIndex: Int, x: Any?, scaleOrLength: Int) = rawResultSet.updateObject(columnIndex, x, scaleOrLength)
    override fun updateObject(columnIndex: Int, x: Any?) = rawResultSet.updateObject(columnIndex, x)
    override fun updateObject(columnLabel: String?, x: Any?, scaleOrLength: Int) = rawResultSet.updateObject(columnLabel, x, scaleOrLength)
    override fun updateObject(columnLabel: String?, x: Any?) = rawResultSet.updateObject(columnLabel, x)
    override fun insertRow() = rawResultSet.insertRow()
    override fun updateRow() = rawResultSet.updateRow()
    override fun deleteRow() = rawResultSet.deleteRow()
    override fun refreshRow() = rawResultSet.refreshRow()
    override fun cancelRowUpdates() = rawResultSet.cancelRowUpdates()
    override fun moveToInsertRow() = rawResultSet.moveToInsertRow()
    override fun moveToCurrentRow() = rawResultSet.moveToCurrentRow()
    override fun getStatement(): Statement = rawResultSet.getStatement()
    override fun getRef(columnIndex: Int): Ref = rawResultSet.getRef(columnIndex)
    override fun getRef(columnLabel: String?): Ref = rawResultSet.getRef(columnLabel)
    override fun getBlob(columnIndex: Int): Blob = rawResultSet.getBlob(columnIndex)
    override fun getBlob(columnLabel: String?): Blob = rawResultSet.getBlob(columnLabel)
    override fun getClob(columnIndex: Int): Clob = rawResultSet.getClob(columnIndex)
    override fun getClob(columnLabel: String?): Clob = rawResultSet.getClob(columnLabel)
    override fun getArray(columnIndex: Int): Array = rawResultSet.getArray(columnIndex)
    override fun getArray(columnLabel: String?): Array = rawResultSet.getArray(columnLabel)
    override fun getURL(columnIndex: Int): URL = rawResultSet.getURL(columnIndex)
    override fun getURL(columnLabel: String?): URL = rawResultSet.getURL(columnLabel)
    override fun updateRef(columnIndex: Int, x: Ref?) = rawResultSet.updateRef(columnIndex, x)
    override fun updateRef(columnLabel: String?, x: Ref?) = rawResultSet.updateRef(columnLabel, x)
    override fun updateBlob(columnIndex: Int, x: Blob?) = rawResultSet.updateBlob(columnIndex, x)
    override fun updateBlob(columnLabel: String?, x: Blob?) = rawResultSet.updateBlob(columnLabel, x)
    override fun updateBlob(columnIndex: Int, inputStream: InputStream?, length: Long) = rawResultSet.updateBlob(columnIndex, inputStream, length)
    override fun updateBlob(columnLabel: String?, inputStream: InputStream?, length: Long) = rawResultSet.updateBlob(columnLabel, inputStream, length)
    override fun updateBlob(columnIndex: Int, inputStream: InputStream?) = rawResultSet.updateBlob(columnIndex, inputStream)
    override fun updateBlob(columnLabel: String?, inputStream: InputStream?) = rawResultSet.updateBlob(columnLabel, inputStream)
    override fun updateClob(columnIndex: Int, x: Clob?) = rawResultSet.updateClob(columnIndex, x)
    override fun updateClob(columnLabel: String?, x: Clob?) = rawResultSet.updateClob(columnLabel, x)
    override fun updateClob(columnIndex: Int, reader: Reader?, length: Long) = rawResultSet.updateClob(columnIndex, reader, length)
    override fun updateClob(columnLabel: String?, reader: Reader?, length: Long) = rawResultSet.updateClob(columnLabel, reader, length)
    override fun updateClob(columnIndex: Int, reader: Reader?) = rawResultSet.updateClob(columnIndex, reader)
    override fun updateClob(columnLabel: String?, reader: Reader?) = rawResultSet.updateClob(columnLabel, reader)
    override fun updateArray(columnIndex: Int, x: Array?) = rawResultSet.updateArray(columnIndex, x)
    override fun updateArray(columnLabel: String?, x: Array?) = rawResultSet.updateArray(columnLabel, x)
    override fun getRowId(columnIndex: Int): RowId = rawResultSet.getRowId(columnIndex)
    override fun getRowId(columnLabel: String?): RowId = rawResultSet.getRowId(columnLabel)
    override fun updateRowId(columnIndex: Int, x: RowId?) = rawResultSet.updateRowId(columnIndex, x)
    override fun updateRowId(columnLabel: String?, x: RowId?) = rawResultSet.updateRowId(columnLabel, x)
    override fun getHoldability(): Int = rawResultSet.getHoldability()
    override fun isClosed(): Boolean = rawResultSet.isClosed()
    override fun updateNString(columnIndex: Int, nString: String?) = rawResultSet.updateNString(columnIndex, nString)
    override fun updateNString(columnLabel: String?, nString: String?) = rawResultSet.updateNString(columnLabel, nString)
    override fun updateNClob(columnIndex: Int, nClob: NClob?) = rawResultSet.updateNClob(columnIndex, nClob)
    override fun updateNClob(columnLabel: String?, nClob: NClob?) = rawResultSet.updateNClob(columnLabel, nClob)
    override fun updateNClob(columnIndex: Int, reader: Reader?, length: Long) = rawResultSet.updateNClob(columnIndex, reader, length)
    override fun updateNClob(columnLabel: String?, reader: Reader?, length: Long) = rawResultSet.updateNClob(columnLabel, reader, length)
    override fun updateNClob(columnIndex: Int, reader: Reader?) = rawResultSet.updateNClob(columnIndex, reader)
    override fun updateNClob(columnLabel: String?, reader: Reader?) = rawResultSet.updateNClob(columnLabel, reader)
    override fun getNClob(columnIndex: Int): NClob = rawResultSet.getNClob(columnIndex)
    override fun getNClob(columnLabel: String?): NClob = rawResultSet.getNClob(columnLabel)
    override fun getSQLXML(columnIndex: Int): SQLXML = rawResultSet.getSQLXML(columnIndex)
    override fun getSQLXML(columnLabel: String?): SQLXML = rawResultSet.getSQLXML(columnLabel)
    override fun updateSQLXML(columnIndex: Int, xmlObject: SQLXML?) = rawResultSet.updateSQLXML(columnIndex, xmlObject)
    override fun updateSQLXML(columnLabel: String?, xmlObject: SQLXML?) = rawResultSet.updateSQLXML(columnLabel, xmlObject)
    override fun getNString(columnIndex: Int): String = rawResultSet.getNString(columnIndex)
    override fun getNString(columnLabel: String?): String = rawResultSet.getString(columnLabel)
    override fun getNCharacterStream(columnIndex: Int): Reader = rawResultSet.getNCharacterStream(columnIndex)
    override fun getNCharacterStream(columnLabel: String?): Reader = rawResultSet.getNCharacterStream(columnLabel)
    override fun updateNCharacterStream(columnIndex: Int, x: Reader?, length: Long) = rawResultSet.updateNCharacterStream(columnIndex, x, length)
    override fun updateNCharacterStream(columnLabel: String?, reader: Reader?, length: Long) = rawResultSet.updateNCharacterStream(columnLabel, reader, length)
    override fun updateNCharacterStream(columnIndex: Int, x: Reader?) = rawResultSet.updateNCharacterStream(columnIndex, x)
    override fun updateNCharacterStream(columnLabel: String?, reader: Reader?) = rawResultSet.updateNCharacterStream(columnLabel, reader)
    fun isExistsAndClose(): Boolean {
        val result = next()
        this.close()
        return result
    }
}